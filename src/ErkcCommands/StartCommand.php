<?php

/**
 * This file is part of the PHP Telegram Bot example-bot package.
 * https://github.com/php-telegram-bot/example-bot/
 * (c) PHP Telegram Bot Team
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * Start command
 * Gets executed when a user first starts using the bot.
 * When using deep-linking, the parameter can be accessed by getting the command text.
 * @see https://core.telegram.org/bots#deep-linking
 */

namespace Longman\TelegramBot\Commands\SystemCommands;

use Longman\TelegramBot\Commands\SystemCommand;
use Longman\TelegramBot\Entities\Keyboard;
use Longman\TelegramBot\Entities\ServerResponse;
use Longman\TelegramBot\Exception\TelegramException;
use Longman\TelegramBot\Request;
use Services\Erkc\Api;
use Services\Erkc\ErkcKeyboards;

class StartCommand extends SystemCommand
{
    /**
     * @var string
     */
    protected $name = 'start';

    /**
     * @var string
     */
    protected $description = 'Start command';

    /**
     * @var string
     */
    protected $usage = '/start';

    /**
     * @var string
     */
    protected $version = '1.2.0';

    /**
     * @var bool
     */
    protected $private_only = true;

    /**
     * Main command execution
     * @return ServerResponse
     * @throws TelegramException
     */
    public function execute(): ServerResponse
    {
        if ($message = $this->getMessage()) {
            $user_id = $message->getFrom()->getId();
            $message_id = $message->getMessageId();
            $getFirstName = $message->getFrom()->getFirstName();
            $getLastName = $message->getFrom()->getLastName();
            $chat_id = $message->getChat()->getId();
        } elseif ($callback_query = $this->getCallbackQuery()) {
            $user_id = $callback_query->getFrom()->getId();
            $message_id = $callback_query->getMessage()->getMessageId();
            $getFirstName = $callback_query->getFrom()->getFirstName();
            $getLastName = $callback_query->getFrom()->getLastName();
            $chat_id = $callback_query->getMessage()->getChat()->getId();
        }
        $result = Request::emptyResponse();
        if (false) {
            $greetingMessage = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ' . $getFirstName . '! üëã';

            $result = Request::sendMessage([
                'chat_id' => $chat_id,
                'text' => $greetingMessage,
                'parse_mode' => 'html',
                'reply_markup' => ErkcKeyboards::getBasicKb()->setResizeKeyboard(true)->setSelective(true)
            ]);
        } else {
            $greetingMessage = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã' . "\n" .
                '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç <b>–£–ú–ü "–ï–†–ö–¶ –≥.–¢–æ–º—Å–∫–∞"</b>' . "\n\n" .
                '<b>–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –í—ã —Å–º–æ–∂–µ—Ç–µ:</b>' . "\n" .
                '  ‚úî –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ª–∏—Ü–µ–≤—ã–º —Å—á–µ—Ç–∞–º' . "\n" .
                '  ‚úî –ü–æ–ª—É—á–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –∫–≤–∏—Ç–∞–Ω—Ü–∏—é' . "\n" .
                '  ‚úî –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤' . "\n" .
                '  ‚úî –û–ø–ª–∞—á–∏–≤–∞—Ç—å —É—Å–ª—É–≥–∏' . "\n" .
                '  ‚úî –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–ª–∞—Ç–µ–∂–µ–π –∏ –ø–æ–∫–∞–∑–∞–Ω–∏–π —Å—á–µ—Ç—á–∏–∫–æ–≤' . "\n\n" .
                '–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ª–∏—á–Ω—ã–º –∫–∞–±–∏–Ω–µ—Ç–æ–º –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ'
                . ' (<a href="https://vc.tom.ru/uinfo/lkspravka/">https://vc.tom.ru/uinfo/lkspravka</a>).' . "\n\n" .
                '–ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤—ã—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü–∏–π –Ω–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—ã—Ö –£–ú–ü "–ï–†–ö–¶ –≥. –¢–æ–º—Å–∫–∞"'
                . '(<a href="https://vc.tom.ru/upload/stats/images/tg-bot1.jpg">–∫–∞–∫ —É–∑–Ω–∞—Ç—å?</a>),' . "\n" .
                '–†–µ–≥. –§–æ–Ω–¥–æ–º –ö–∞–ø. –†–µ–º–æ–Ω—Ç–∞ –¢–æ–º—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ (–≤–∑–Ω–æ—Å—ã –Ω–∞ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç –Ω–∞ –æ–±—â–∏–π —Å—á–µ—Ç),' . "\n" .
                '–û–û–û "–¢–†–¶" (—É—Å–ª—É–≥–∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è —Å –¢–ö–û),' . "\n" .
                '–û–û–û "–£–ö "–ñ–∏–ª–∏—â–µ".';

            Request::sendMessage([
                'chat_id' => $chat_id,
                'text' => $greetingMessage,
                'parse_mode' => 'html',
                'disable_web_page_preview' => true,
                'reply_markup' => Keyboard::remove(['selective' => true]),
            ]);

            $greetingMessage_2 = '–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —É—Å–ª—É–≥ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.' . "\n\n"
                . '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ üëâÔ∏è <a href="https://vc.tom.ru/users/?action=reg">—Å—Å—ã–ª–∫–∞</a>.';
            Request::sendMessage([
                'chat_id' => $chat_id,
                'text' => $greetingMessage_2,
                'parse_mode' => 'html',
                'disable_web_page_preview' => true

            ]);

            $greetingMessage_3 = '–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ –æ–ø–ª–∞—Ç–µ –ñ–ö–£ –∏ –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–æ–∫–∞–∑–∞–Ω–∏–π —Å—á–µ—Ç—á–∏–∫–æ–≤ –º–æ–∂–Ω–æ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.' . "\n" .
                '–î–ª—è —ç—Ç–æ–≥–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∏–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–∏—Ö –∫–≤–∏—Ç–∞–Ω—Ü–∏—è—Ö –Ω–∞ –æ–ø–ª–∞—Ç—É —É—Å–ª—É–≥.' . "\n" .
                '<b>–î–ª—è —ç—Ç–æ–≥–æ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å:</b>' . "\n" .
                '  ‚úî –®—Ç—Ä–∏—Ö–∫–æ–¥ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ ' . "\n" .
                '  ‚úî –í—ã–±—Ä–∞—Ç—å —É–ª–∏—Ü—É' . "\n" .
                '  ‚úî –ù–æ–º–µ—Ä –¥–æ–º–∞' . "\n" .
                '  ‚úî –ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã' . "\n" .
                '‚Äº –í–∞–∂–Ω–æ, –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏, –Ω–æ –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π —Ç–∏–ø–∞: —É–ª., –ø–µ—Ä., –ø—Ä-—Ç –∏ —Ç.–¥. ‚Äº' . "\n\n" .
                '–õ–∏–±–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å–æ —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–º –∏–ª–∏ qr-–∫–æ–¥–æ–º –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ (<a href="https://vc.tom.ru/upload/stats/images/tg-bot2.jpg">–ø—Ä–∏–º–µ—Ä</a>) .' . "\n\n" .
                '–î–ª—è –Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é ';
            if (Api::is_registered($user_id)) {
                $keyboard = ErkcKeyboards::keyboardByRegisteredUser()
                    ->setResizeKeyboard(true)
                    ->setSelective(false);
            } else {
                $keyboard = ErkcKeyboards::getBasicKb()->setResizeKeyboard(true)->setSelective(false);
            }
            $result = Request::sendMessage([
                'chat_id' => $chat_id,
                'text' => $greetingMessage_3,
                'reply_markup' => $keyboard,
                'parse_mode' => 'html',
                'disable_web_page_preview' => true
            ]);
        }
        return $result;
    }
}
